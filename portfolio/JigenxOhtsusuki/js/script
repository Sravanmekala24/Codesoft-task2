document.addEventListener('DOMContentLoaded', () => {
    // Sidebar Toggle Functionality
    const menuToggle = document.getElementById('menu-toggle');
    const sidebar = document.getElementById('sidebar');
    const closeBtn = document.getElementById('close-btn');

    menuToggle.addEventListener('click', () => {
        sidebar.classList.add('active');
    });

    closeBtn.addEventListener('click', () => {
        sidebar.classList.remove('active');
    });

    // Close sidebar when clicking outside of it
    document.addEventListener('click', (e) => {
        if (!sidebar.contains(e.target) && !menuToggle.contains(e.target)) {
            sidebar.classList.remove('active');
        }
    });

    // Info Bar Animation
    const infoBar = document.getElementById('info-bar');
    const sections = document.querySelectorAll('.section');
    const navLinks = document.querySelectorAll('nav ul li a');
    
    function updateInfoBar() {
        let currentSection = null;

        sections.forEach(section => {
            const rect = section.getBoundingClientRect();
            if (rect.top <= window.innerHeight / 2 && rect.bottom >= window.innerHeight / 2) {
                currentSection = section;
            }
        });

        if (currentSection) {
            const index = Array.from(sections).indexOf(currentSection);
            const link = navLinks[index];
            const rect = link.getBoundingClientRect();
            const headerRect = document.querySelector('header').getBoundingClientRect();

            // Update info bar width and position
            infoBar.style.width = `${rect.width}px`;
            infoBar.style.left = `${rect.left}px`;
            infoBar.style.transform = `translateY(${headerRect.height}px)`;
        }
    }

    // Add scroll and resize event listeners to update info bar
    window.addEventListener('scroll', updateInfoBar);
    window.addEventListener('resize', updateInfoBar);

    // Initial call to set the info bar position
    updateInfoBar();

    // Add click event listeners to nav links for smooth scrolling
    navLinks.forEach((link, index) => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const targetSection = sections[index];
            window.scrollTo({
                top: targetSection.offsetTop,
                behavior: 'smooth'
            });
        });
    });
});
